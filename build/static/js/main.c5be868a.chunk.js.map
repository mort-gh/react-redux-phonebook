{"version":3,"sources":["transitions/pop.module.css","components/contactForm/errorName/ErrorName.module.css","transitions/logo.module.css","transitions/error.module.css","redux/types.js","redux/contacts/formReducer.js","redux/store.js","components/contactForm/contactFilter/ContactFilter.js","components/contactForm/contactList/ContactList.js","components/contactForm/errorName/ErrorName.js","components/contactForm/ContactForm.js","containers/ContactFromContainer.js","redux/contacts/formActions.js","components/App.js","index.js"],"names":["module","exports","initialState","contacts","filter","handlers","Type","state","contact","payload","id","query","rootReducer","combineReducers","phonebook","action","handler","type","DEFAULT","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","store","createStore","devToolsEnhancer","persistor","persistStore","ContactFilter","onFilterContacts","CSSTransition","classNames","popTransition","in","length","unmountOnExit","timeout","className","onChange","e","target","value","autoComplete","placeholder","name","ContactList","deleteContact","TransitionGroup","component","map","phone","onClick","ErrorName","css","block","class","ContactForm","filtered","isLoading","handleChange","setState","handleSubmit","preventDefault","getTheSameName","getFormValueContact","shortId","prev","props","addContact","some","getArrayFilteredContacts","filterContacts","toLowerCase","includes","toDeleteContact","this","onSubmit","logoTransition","errorTransition","React","Component","connect","App","app","loading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5be868a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__1NM7x\",\"enterActive\":\"pop_enterActive__1Bhql\",\"exit\":\"pop_exit__1_phz\",\"exitActive\":\"pop_exitActive__3xbz2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"ErrorName_block__14N8y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"logo_enter__YeBq3\",\"enterActive\":\"logo_enterActive__1zWh2\",\"exit\":\"logo_exit__1k3Bw\",\"exitActive\":\"logo_exitActive__1uO1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"error_enter__3B8PE\",\"enterActive\":\"error_enterActive__3d2tj\",\"exit\":\"error_exit__3EbnH\",\"exitActive\":\"error_exitActive__f2zDU\"};","export default {\n  ADD_CONTACT: \"phonebook_ADD_CONTACT\",\n  DELETE_CONTACT: \"phonebook_DELETE_CONTACT\",\n  FILTER_CONTACT: \"phonebook_FILTER_CONTACT\"\n};\n","import Type from \"../types\";\n\nconst initialState = {\n  contacts: [\n    // { name: \"Adolf Hitler\", phone: \"111-11-11\", id: \"1\" },\n    // { name: \"Osama bin Laden\", phone: \"222-22-22\", id: \"2\" },\n    // { name: \"Joseph Stalin\", phone: \"333-33-33\", id: \"3\" },\n    // { name: \"Dschinghis Khan\", phone: \"444-44-44\", id: \"4\" },\n    // { name: \"Mao Zedong\", phone: \"555-55-55\", id: \"5\" }\n  ],\n  filter: \"\"\n};\n\nconst handlers = {\n  [Type.ADD_CONTACT]: (state, { payload: { contact } }) => {\n    return { ...state, contacts: [...state.contacts, contact] };\n  },\n\n  [Type.DELETE_CONTACT]: (state, { payload: { id } }) => {\n    return {\n      ...state,\n      contacts: [...state.contacts.filter(contact => contact.id !== id)]\n    };\n  },\n\n  [Type.FILTER_CONTACT]: (state, { payload: { query } }) => {\n    return { ...state, filter: query };\n  },\n\n  DEFAULT: state => state\n};\n\nexport const phonebook = (state = initialState, action) => {\n  const handler = handlers[action.type] || handlers.DEFAULT;\n\n  return handler(state, action);\n};\n\n// ================ with toolkit ==================\n\n// import { createReducer } from \"@reduxjs/toolkit\";\n// import { addContact, deleteContact, filterContacts } from \"./formActions\";\n\n// const initialState = {\n//   contacts: [],\n//   filter: \"\"\n// };\n\n// export const phonebook = createReducer(initialState, {\n//   [addContact]: (state, { payload: { contact } }) => ({\n//     ...state,\n//     contacts: [...state.contacts, contact]\n//   }),\n//   [deleteContact]: (state, { payload: { id } }) => ({\n//     ...state,\n//     contacts: [...state.contacts.filter(contact => contact.id !== id)]\n//   }),\n//   [filterContacts]: (state, { payload: { query } }) => ({\n//     ...state,\n//     filter: query\n//   })\n// });\n","import { createStore, combineReducers } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\n// import { configureStore } from \"@reduxjs/toolkit\";\nimport { phonebook } from \"./contacts/formReducer\";\n\nconst rootReducer = combineReducers({\n  phonebook\n});\n\nconst persistConfig = {\n  key: \"contacts\",\n  storage,\n  whitelist: [\"phonebook\"]\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n// export const store = configureStore({ reducer: persistedReducer });\nexport const store = createStore(persistedReducer, devToolsEnhancer());\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport popTransition from \"../../../transitions/pop.module.css\";\n\nconst ContactFilter = ({ contacts, onFilterContacts }) => {\n  return (\n    <>\n      <CSSTransition\n        classNames={popTransition}\n        in={contacts.length > 1}\n        unmountOnExit\n        timeout={250}\n      >\n        <div className=\"filter\">\n          <h5>Find contact</h5>\n\n          <input\n            onChange={e => onFilterContacts(e.target.value)}\n            type=\"search\"\n            autoComplete=\"off\"\n            placeholder=\"Start type to search ...\"\n            name=\"filter\"\n          />\n        </div>\n      </CSSTransition>\n    </>\n  );\n};\n\nexport default ContactFilter;\n","import React from \"react\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport popTransition from \"../../../transitions/pop.module.css\";\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    <>\n      <table className=\"centered striped\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Number</th>\n            <th>Control</th>\n          </tr>\n        </thead>\n\n        <TransitionGroup component=\"tbody\">\n          {contacts.map(contact => {\n            return (\n              <CSSTransition\n                key={contact.id}\n                timeout={250}\n                classNames={popTransition}\n              >\n                <tr>\n                  <td>{contact.name}</td>\n                  <td>{contact.phone}</td>\n                  <td>\n                    <button\n                      onClick={() => deleteContact(contact.id)}\n                      className=\"waves-effect waves-light btn-small\"\n                    >\n                      <i className=\"material-icons center\">delete</i>\n                    </button>\n                  </td>\n                </tr>\n              </CSSTransition>\n            );\n          })}\n        </TransitionGroup>\n      </table>\n    </>\n  );\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport css from \"./ErrorName.module.css\";\n\nconst ErrorName = ({ name }) => {\n  return (\n    <div className={css.block}>\n      <i class=\"material-icons left\">error_outline</i> \"{name}\" is already in\n      contacts\n    </div>\n  );\n};\n\nexport default ErrorName;\n","import React from \"react\";\nimport shortId from \"shortid\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ContactFilter from \"./contactFilter/ContactFilter\";\nimport ContactList from \"./contactList/ContactList\";\nimport ErrorName from \"./errorName/ErrorName\";\nimport logoTransition from \"../../transitions/logo.module.css\";\nimport errorTransition from \"../../transitions/error.module.css\";\n\nclass ContactForm extends React.Component {\n  state = {\n    name: \"\",\n    phone: \"\",\n    contacts: [],\n    filtered: [],\n    isLoading: false\n  };\n\n  componentDidMount() {\n    this.setState({\n      contacts: [...this.props.phonebook.contacts]\n    });\n\n    if (!this.state.isLoading) {\n      this.setState({\n        isLoading: true\n      });\n    }\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (!this.getTheSameName(this.state.name)) {\n      this.getFormValueContact({\n        name: this.state.name,\n        phone: this.state.phone,\n        id: shortId()\n      });\n\n      this.setState({\n        name: \"\",\n        phone: \"\"\n      });\n    }\n  };\n\n  getFormValueContact = value => {\n    this.setState(prev => {\n      return {\n        contacts: [...prev.contacts, value],\n        filtered: [...prev.contacts, value]\n      };\n    });\n\n    this.props.addContact(value);\n  };\n\n  getTheSameName = name => {\n    return this.state.contacts.some(contact => contact.name === name);\n  };\n\n  getArrayFilteredContacts = value => {\n    this.props.filterContacts(value);\n\n    this.setState({\n      filtered: this.props.phonebook.contacts.filter(contact =>\n        contact.name\n          .toLowerCase()\n          .includes(this.props.phonebook.filter.toLowerCase())\n      )\n    });\n  };\n\n  toDeleteContact = id => {\n    this.props.deleteContact(id);\n\n    this.setState({\n      contacts: this.state.contacts.filter(contact => contact.id !== id)\n    });\n  };\n\n  render() {\n    const { contacts, filtered } = this.state;\n    return (\n      <>\n        <div>\n          <form onSubmit={this.handleSubmit}>\n            <CSSTransition\n              timeout={500}\n              in={this.state.isLoading}\n              classNames={logoTransition}\n            >\n              <h5>Phonebook</h5>\n            </CSSTransition>\n\n            <input\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"Name\"\n              autoComplete=\"off\"\n              onChange={this.handleChange}\n              value={this.state.name}\n            />\n\n            <input\n              name=\"phone\"\n              type=\"text\"\n              placeholder=\"Phone (only integers!)\"\n              autoComplete=\"off\"\n              onChange={this.handleChange}\n              value={this.state.phone}\n            />\n\n            <button\n              className=\"waves-effect waves-light btn right\"\n              type=\"submit\"\n            >\n              <i className=\"material-icons left\">add</i> Add Contact\n            </button>\n          </form>\n        </div>\n        {this.props.phonebook.contacts.length > 0 && (\n          <ContactFilter\n            contacts={this.props.phonebook.contacts}\n            onFilterContacts={this.getArrayFilteredContacts}\n          />\n        )}\n\n        {this.props.phonebook.contacts.length > 0 && (\n          <ContactList\n            contacts={this.props.phonebook.filter ? filtered : contacts}\n            deleteContact={this.toDeleteContact}\n          />\n        )}\n\n        <CSSTransition\n          classNames={errorTransition}\n          in={this.getTheSameName(this.state.name)}\n          timeout={500}\n          unmountOnExit\n        >\n          <ErrorName name={this.state.name} />\n        </CSSTransition>\n      </>\n    );\n  }\n}\n\nexport default ContactForm;\n","import { connect } from \"react-redux\";\nimport {\n  addContact,\n  filterContacts,\n  deleteContact\n} from \"../redux/contacts/formActions\";\nimport ContactForm from \"../components/contactForm/ContactForm\";\n\nconst mSTP = state => state;\n\nexport default connect(mSTP, { addContact, filterContacts, deleteContact })(\n  ContactForm\n);\n","import Type from \"../types\";\n// import { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContact = contact => ({\n  type: Type.ADD_CONTACT,\n  payload: { contact }\n});\n\nexport const deleteContact = id => ({\n  type: Type.DELETE_CONTACT,\n  payload: { id }\n});\n\nexport const filterContacts = query => ({\n  type: Type.FILTER_CONTACT,\n  payload: { query }\n});\n\n// ================ with toolkit ==================\n\n// export const addContact = createAction(Type.ADD_CONTACT);\n// export const deleteContact = createAction(Type.DELETE_CONTACT);\n// export const filterContacts = createAction(Type.FILTER_CONTACT);\n","import React from \"react\";\nimport ContactForm from \"../containers/ContactFromContainer\";\n\nconst App = () => {\n  return (\n    <>\n      <ContactForm />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport App from \"./components/App\";\nimport \"materialize-css/dist/css/materialize.min.css\";\n\nconst app = (\n  <div className=\"container\">\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </div>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n"],"sourceRoot":""}